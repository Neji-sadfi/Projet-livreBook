Index: src/main/resources/com/example/livrebook/hello-view.fxml
===================================================================
diff --git a/src/main/resources/com/example/livrebook/hello-view.fxml b/src/main/resources/com/example/livrebook/hello-view.fxml
deleted file mode 100644
--- a/src/main/resources/com/example/livrebook/hello-view.fxml	
+++ /dev/null	
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.layout.AnchorPane?>
-
-
-<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="143.0" prefWidth="344.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1">
-   <children>
-      <Label layoutX="37.0" layoutY="71.0" text="mdp" />
-      <TextField fx:id="tfNom" layoutX="98.0" layoutY="29.0" />
-      <Label layoutX="37.0" layoutY="33.0" text="nom" />
-      <TextField layoutX="98.0" layoutY="67.0" />
-      <Button layoutX="139.0" layoutY="104.0" mnemonicParsing="false" text="connecter" />
-   </children>
-</AnchorPane>
Index: src/main/java/com/example/livrebook/gui/event/EventDescriptionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/livrebook/gui/event/EventDescriptionController.java b/src/main/java/com/example/livrebook/gui/event/EventDescriptionController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/livrebook/gui/event/EventDescriptionController.java	
@@ -0,0 +1,239 @@
+package com.example.livrebook.gui.event;
+
+import com.example.livrebook.model.event.Event;
+import com.example.livrebook.model.event.Ticket;
+import com.example.livrebook.service.eventServices.EventService;
+import com.example.livrebook.service.eventServices.TicketService;
+import com.google.zxing.BarcodeFormat;
+import com.google.zxing.MultiFormatWriter;
+import com.google.zxing.WriterException;
+import com.google.zxing.client.j2se.MatrixToImageWriter;
+import com.google.zxing.common.BitMatrix;
+import com.itextpdf.text.*;
+import com.itextpdf.text.pdf.PdfPCell;
+import com.itextpdf.text.pdf.PdfPTable;
+import com.itextpdf.text.pdf.PdfWriter;
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.Initializable;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.image.ImageView;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.net.URL;
+import java.nio.file.Paths;
+import java.sql.SQLException;
+import java.util.Objects;
+import java.util.ResourceBundle;
+
+import static java.awt.Desktop.getDesktop;
+
+
+public class EventDescriptionController  implements Initializable {
+
+    @FXML
+    private Button addTicket;
+
+
+    @FXML
+    private Label nb_ticket;
+
+
+    @FXML
+    private Label ticket_adresse;
+
+    @FXML
+    private Label ticket_description;
+
+    @FXML
+    private Label ticket_end;
+
+    @FXML
+    private ImageView ticket_photo;
+
+    @FXML
+    private Label ticket_price;
+
+    @FXML
+    private Label ticket_start;
+
+    @FXML
+    private Label ticket_title;
+
+
+
+
+    TicketService ticketService;
+     Event receivedEvent;
+     EventService eventService;
+
+    @FXML
+    void addTicket(ActionEvent event) throws WriterException, IOException, SQLException, DocumentException {
+
+        String data = "https://thatsthefinger.com/";
+        String path = "C:\\Users\\user\\Desktop\\QR-Code\\infybuzz.jpg";
+        BitMatrix matrix = new MultiFormatWriter()
+                .encode(data, BarcodeFormat.QR_CODE, 500, 500);
+        MatrixToImageWriter.writeToPath(matrix, "jpg", Paths.get(path));
+        System.out.println("Qr code successfully created");
+        String pathbase = "C:/Users/user/Desktop/QR-Code/Ticket.jpg";
+        Ticket ticket = new Ticket(pathbase, hashCode(), 0, receivedEvent.getId());
+        ticketService.insert(ticket);
+
+         eventService.updateTicket(receivedEvent);
+        var doc = new Document();
+        try {
+            PdfWriter.getInstance(doc, new FileOutputStream("Ticket.pdf"));
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+        doc.open();
+
+        // Define Fonts
+        Font titleFont = new Font(Font.FontFamily.HELVETICA, 24, Font.BOLD, BaseColor.DARK_GRAY);
+        Font subtitleFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD, BaseColor.GRAY);
+        Font normalFont = new Font(Font.FontFamily.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK);
+
+        // Add title
+        Paragraph title = new Paragraph("Event "+receivedEvent.getTitle()+" Ticket", titleFont);
+        title.setAlignment(Element.ALIGN_CENTER);
+        title.setSpacingAfter(20f);
+        try {
+            doc.add(title);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add subtitle
+        Paragraph subtitle = new Paragraph("Event Details", subtitleFont);
+        subtitle.setAlignment(Element.ALIGN_CENTER);
+        subtitle.setSpacingAfter(10f);
+        try {
+            doc.add(subtitle);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add QR Code image
+        try {
+            Image qrCodeImage = Image.getInstance(path);
+            qrCodeImage.setAlignment(Element.ALIGN_CENTER);
+            qrCodeImage.scaleAbsolute(200f, 200f);
+            doc.add(qrCodeImage);
+            doc.add(new Paragraph("Scan QR Code for Event Access", normalFont));
+            doc.add(Chunk.NEWLINE);
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add description
+        Paragraph description = new Paragraph(
+                "Join us for an exciting event filled with entertainment and fun. " +
+                        "Don't miss out on this amazing experience!",
+                normalFont);
+        description.setAlignment(Element.ALIGN_JUSTIFIED);
+        description.setSpacingAfter(20f);
+        try {
+            doc.add(description);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add event details
+        PdfPTable table = new PdfPTable(2);
+        table.setWidthPercentage(100);
+        table.setWidths(new float[]{2, 5});
+
+        table.addCell(createCell("Date:", normalFont));
+        table.addCell(createCell(String.valueOf(receivedEvent.getStartDate()), normalFont));
+
+        table.addCell(createCell("About:", normalFont));
+        table.addCell(createCell(receivedEvent.getDescription(), normalFont));
+
+        table.addCell(createCell("Location:", normalFont));
+        table.addCell(createCell(receivedEvent.getAdresse(), normalFont));
+
+        try {
+            doc.add(table);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Close the document
+        doc.close();
+        File pdfFile = new File("Ticket.pdf");
+        try {
+            getDesktop().open(pdfFile);
+        } catch (IOException e) {
+            throw new RuntimeException("Unable to open PDF file: " + e.getMessage());
+        }
+    }
+
+    private static PdfPCell createCell(String content, Font font) {
+        PdfPCell cell = new PdfPCell(new Phrase(content, font));
+        cell.setBorder(Rectangle.NO_BORDER);
+        return cell;
+    }
+
+
+
+
+
+    public void setEvent(Event event) {
+       this.receivedEvent = event;
+
+        setData();
+    }
+
+    @Override
+    public void initialize(URL location, ResourceBundle resources) {
+        this.ticketService = new TicketService();
+        this.eventService = new EventService();
+
+    }
+
+
+
+
+    @Override
+    public int hashCode() {
+      return Objects.hash(receivedEvent.getId());
+
+
+    }
+
+    public void setData() {
+
+
+        if (receivedEvent != null) {
+            if (ticket_photo != null) {
+            javafx.scene.image.Image image = new javafx.scene.image.Image((getClass().getResourceAsStream(receivedEvent.getPicture())));
+
+            ticket_photo.setImage(image);}
+            ticket_title.setText(receivedEvent.getTitle());
+            String date = String.valueOf(receivedEvent.getStartDate());
+            ticket_start.setText(date);
+            String date_end = String.valueOf(receivedEvent.getEndDate());
+            ticket_end.setText(date_end);
+            ticket_adresse.setText(receivedEvent.getAdresse());
+            ticket_description.setText(receivedEvent.getDescription());
+            ticket_price.setText(String.valueOf(hashCode()));
+
+            System.out.println(receivedEvent);
+        } else {
+            // Handle the case where receivedEvent is null
+            // For example, set default values for your UI elements
+            ticket_title.setText("");
+            ticket_start.setText("");
+            ticket_end.setText("");
+            ticket_adresse.setText("");
+            ticket_description.setText("");
+            ticket_price.setText("");
+        }
+    }
+
+
+}
Index: src/main/java/com/example/livrebook/service/eventServices/EventService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.livrebook.service.eventServices;\n\nimport com.example.livrebook.model.event.Event;\n\nimport com.example.livrebook.service.CRUD;\nimport com.example.livrebook.util.DbConnection;\n\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class EventService implements CRUD<Event> {\n    private Connection cnx;\n\n    public EventService(){\n        cnx = DbConnection.getInstance().getCnx();\n    }\n    @Override\n    public boolean insert(Event event) throws SQLException {\n        String req = \"INSERT INTO event (id,title, adresse, description, picture, startDate, endDate) \" +\n                \"VALUES ('\" + event.getId() + \"','\"  + event.getTitle() + \"','\" + event.getAdresse() + \"','\" + event.getDescription() +\"','\" + event.getPicture()\n                +\"','\" + event.getStartDate() +\"','\" + event.getEndDate() + \"')\";\n\n\n        Statement st = cnx.createStatement();\n        return st.executeUpdate(req) == -1;\n    }\n\n\n\n    @Override\n    public boolean update(Event event) throws SQLException {\n\n        String req = \"UPDATE event SET \" +\n                \"title='\" + event.getTitle() + \"', \" +\n                \"adresse='\" + event.getAdresse() + \"', \" +\n                \"description='\" + event.getDescription() + \"', \" +\n                \"picture='\" + event.getPicture() + \"', \" +\n                \"startDate='\" + event.getStartDate() + \"', \" +\n                \"endDate='\" + event.getEndDate() + \"' \" +\n                \"WHERE id=\" + event.getId();\n\n        Statement st = cnx.createStatement();\n        return st.executeUpdate(req) == -1;\n    }\n\n\n    @Override\n    public boolean delete(int id) throws SQLException {\n        String req = \"DELETE FROM event WHERE id=\" + id;\n\n        Statement st = cnx.createStatement();\n        return st.executeUpdate(req) == -1;\n    }\n\n\n\n    @Override\n\n    public boolean delete(Event event) throws SQLException {\n        String req = \"DELETE FROM event WHERE id = \"+ event.getId();\n        Statement st = cnx.createStatement();\n\n        return st.executeUpdate(req) == -1;\n    }\n\n\n    @Override\n    public List<Event> selectAll() throws SQLException {\n        List<Event> events = new ArrayList<>();\n\n        String req = \"SELECT * FROM event\";\n        Statement st = cnx.createStatement();\n        ResultSet resultSet = st.executeQuery(req);\n\n        while (resultSet.next()) {\n            Event event = new Event();\n            event.setId(resultSet.getInt(\"id\"));\n            event.setTitle(resultSet.getString(\"title\"));\n            event.setAdresse(resultSet.getString(\"adresse\"));\n            event.setDescription(resultSet.getString(\"description\"));\n            event.setPicture(resultSet.getString(\"picture\"));\n            event.setStartDate(resultSet.getDate(\"startDate\"));\n            event.setEndDate(resultSet.getDate(\"endDate\"));\n\n            // Assuming there is a proper constructor for List<Integer>\n\n\n            events.add(event);\n        }\n\n        return events;\n    }\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/livrebook/service/eventServices/EventService.java b/src/main/java/com/example/livrebook/service/eventServices/EventService.java
--- a/src/main/java/com/example/livrebook/service/eventServices/EventService.java	
+++ b/src/main/java/com/example/livrebook/service/eventServices/EventService.java	
@@ -75,6 +75,7 @@
 
         while (resultSet.next()) {
             Event event = new Event();
+
             event.setId(resultSet.getInt("id"));
             event.setTitle(resultSet.getString("title"));
             event.setAdresse(resultSet.getString("adresse"));
@@ -93,6 +94,16 @@
     }
 
 
+    public boolean updateTicket(Event event) throws SQLException {
+        int  nbTicket=event.getNb_ticket()-1;
+
+        String req = "UPDATE event SET " +
+                "nb_ticket='" + nbTicket + "' " +
+                "WHERE id=" + event.getId();
+
+        Statement st = cnx.createStatement();
+        return st.executeUpdate(req) == -1;
+    }
 
 
 }
Index: src/main/java/com/example/livrebook/test/PDF.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/livrebook/test/PDF.java b/src/main/java/com/example/livrebook/test/PDF.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/livrebook/test/PDF.java	
@@ -0,0 +1,113 @@
+package com.example.livrebook.test;
+
+import com.google.zxing.BarcodeFormat;
+import com.google.zxing.MultiFormatWriter;
+import com.google.zxing.WriterException;
+import com.google.zxing.client.j2se.MatrixToImageWriter;
+import com.google.zxing.common.BitMatrix;
+import com.itextpdf.text.*;
+import com.itextpdf.text.pdf.PdfPCell;
+import com.itextpdf.text.pdf.PdfPTable;
+import com.itextpdf.text.pdf.PdfWriter;
+
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.nio.file.Paths;
+
+public class PDF {
+    public static void main(String[] args) throws WriterException, IOException, DocumentException {
+        String data = "ahla bik fi jendouba ";
+        String path = "C:\\Users\\user\\Desktop\\QR-Code\\infybuzz.jpg";
+        BitMatrix matrix = new MultiFormatWriter()
+                .encode(data, BarcodeFormat.QR_CODE, 500, 500);
+        MatrixToImageWriter.writeToPath(matrix, "jpg", Paths.get(path));
+        System.out.println("Qr code successfully created");
+
+        var doc = new Document();
+        try {
+            PdfWriter.getInstance(doc, new FileOutputStream("Ticket.pdf"));
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+        doc.open();
+
+        // Define Fonts
+        Font titleFont = new Font(Font.FontFamily.HELVETICA, 24, Font.BOLD, BaseColor.DARK_GRAY);
+        Font subtitleFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD, BaseColor.GRAY);
+        Font normalFont = new Font(Font.FontFamily.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK);
+
+        // Add title
+        Paragraph title = new Paragraph("Event Ticket", titleFont);
+        title.setAlignment(Element.ALIGN_CENTER);
+        title.setSpacingAfter(20f);
+        try {
+            doc.add(title);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add subtitle
+        Paragraph subtitle = new Paragraph("Event Details", subtitleFont);
+        subtitle.setAlignment(Element.ALIGN_CENTER);
+        subtitle.setSpacingAfter(10f);
+        try {
+            doc.add(subtitle);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add QR Code image
+        try {
+            Image qrCodeImage = Image.getInstance(path);
+            qrCodeImage.setAlignment(Element.ALIGN_CENTER);
+            qrCodeImage.scaleAbsolute(200f, 200f);
+            doc.add(qrCodeImage);
+            doc.add(new Paragraph("Scan QR Code for Event Access", normalFont));
+            doc.add(Chunk.NEWLINE);
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add description
+        Paragraph description = new Paragraph(
+                "Join us for an exciting event filled with entertainment and fun. " +
+                        "Don't miss out on this amazing experience!",
+                normalFont);
+        description.setAlignment(Element.ALIGN_JUSTIFIED);
+        description.setSpacingAfter(20f);
+        try {
+            doc.add(description);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Add event details
+        PdfPTable table = new PdfPTable(2);
+        table.setWidthPercentage(100);
+        table.setWidths(new float[]{2, 5});
+
+        table.addCell(createCell("Date:", normalFont));
+        table.addCell(createCell("2024-01-29", normalFont));
+
+        table.addCell(createCell("Time:", normalFont));
+        table.addCell(createCell("6:00 PM - 10:00 PM", normalFont));
+
+        table.addCell(createCell("Location:", normalFont));
+        table.addCell(createCell("Event Venue, City", normalFont));
+
+        try {
+            doc.add(table);
+        } catch (DocumentException e) {
+            throw new RuntimeException(e);
+        }
+
+        // Close the document
+        doc.close();
+    }
+
+    private static PdfPCell createCell(String content, Font font) {
+        PdfPCell cell = new PdfPCell(new Phrase(content, font));
+        cell.setBorder(Rectangle.NO_BORDER);
+        return cell;
+    }
+}
Index: src/main/resources/com/example/livrebook/Event/Design.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/livrebook/Event/Design.css b/src/main/resources/com/example/livrebook/Event/Design.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/com/example/livrebook/Event/Design.css	
@@ -0,0 +1,110 @@
+.bg-white{
+    -fx-background-color: #fff;
+    -fx-effect:dropshadow(three-pass-box,rgba(0,0,0,.3),8,0,0,0);
+    -fx-background-radius:8px;
+}
+.bg-white:hover{
+    -fx-effect:dropshadow(three-pass-box,rgba(0,0,0,0.5),8,0,0,0);
+}
+.image{
+    -fx-background-size: contain;
+    -fx-background-repeat: no-repeat;
+    -fx-background-position: center;
+}
+.transparent{
+     -fx-background-color: rgba(0,0,0,0);
+}
+.shadow{
+    -fx-effect: dropShadow(three-pass-box,rgba(0,0,0,0.1),10,0,0,10);
+}
+/* Design.css */
+
+/* Apply styles to the VBox */
+VBox {
+    -fx-background-color: #f4f4f4; /* Background color */
+}
+
+/* Apply styles to the Label */
+
+
+/* Apply styles to the ScrollPane */
+ScrollPane {
+    -fx-background-color: #ffffff; /* Background color */
+}
+
+/* Apply styles to the HBox inside ScrollPane */
+#CardLayout {
+    -fx-spacing: 20; /* Spacing between children */
+}
+
+/* Apply styles to the children of HBox */
+#CardLayout > * {
+    -fx-background-color: #ffffff; /* Background color */
+    -fx-border-radius: 5; /* Border radius */
+    -fx-border-color: #ccc; /* Border color */
+    -fx-padding: 10; /* Padding */
+    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 10, 0, 0, 0); /* Drop shadow effect */
+}
+/* Design.css */
+
+/* Apply styles to the HBox */
+#box {
+    -fx-background-color: #ffffff; /* Background color */
+    -fx-background-radius: 15;
+    -fx-spacing: 15; /* Spacing between children */
+    -fx-padding: 10; /* Padding */
+    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 10, 0, 0, 0); /* Drop shadow effect */
+}
+
+/* Apply styles to the ImageView */
+#eventImage {
+    -fx-border-radius: 10; /* Border radius */
+}
+
+/* Apply styles to the VBox inside HBox */
+
+
+/* Apply styles to the Labels */
+Label {
+    -fx-text-fill: #333; /* Text color */
+}
+
+/* Apply styles to the Button */
+#btn_buy {
+    -fx-background-color: #8a8069; /* Background color */
+    -fx-text-fill: white; /* Text color */
+    -fx-font-size: 14; /* Font size */
+    -fx-font-weight: bold; /* Font weight */
+    -fx-padding: 8 15; /* Padding */
+    -fx-border-radius: 5; /* Border radius */
+}
+
+#btn_buy:hover {
+    -fx-background-color: #615a4a; /* Hover background color */
+}
+#btn_add, #btn_update, #btn_delete {
+    -fx-background-color: #4CAF50; /* Green */
+    -fx-text-fill: white;
+    -fx-font-size: 14px;
+}
+
+#searchId {
+    -fx-font-size: 14px;
+}
+
+#tvEvent {
+    -fx-table-cell-border-color: derive(-fx-control-inner-background, -9%);
+    -fx-table-header-border-color: derive(-fx-control-inner-background, -9%);
+}
+
+#tvEvent .column-header-background {
+    -fx-background-color: #4CAF50; /* Green */
+}
+
+#tvEvent .column-header, #tvEvent .table-cell {
+    -fx-border-color: derive(-fx-control-inner-background, -9%);
+    -fx-border-width: 1;
+}
+
+/* Add more styles based on your needs */
+
Index: src/main/resources/com/example/livrebook/Event/Event_description.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/livrebook/Event/Event_description.fxml b/src/main/resources/com/example/livrebook/Event/Event_description.fxml
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/com/example/livrebook/Event/Event_description.fxml	
@@ -0,0 +1,103 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import java.lang.String?>
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.Label?>
+<?import javafx.scene.image.Image?>
+<?import javafx.scene.image.ImageView?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.layout.GridPane?>
+<?import javafx.scene.layout.HBox?>
+<?import javafx.scene.layout.VBox?>
+<?import javafx.scene.text.Font?>
+
+<AnchorPane prefHeight="400.0" prefWidth="600.0" style="-fx-background-color: white;" stylesheets="Design.css" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.livrebook.gui.event.EventDescriptionController">
+
+    <VBox alignment="CENTER" layoutX="34.0" prefHeight="430.0" prefWidth="131.0" spacing="10" styleClass="event-details">
+
+        <GridPane gridLinesVisible="true" hgap="10" vgap="5">
+
+        </GridPane>
+
+        <HBox prefHeight="17.0" prefWidth="102.0" spacing="10">
+            <Label styleClass="attribute-label" text="Title:">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+        </HBox>
+
+        <HBox spacing="10">
+            <Label styleClass="attribute-label" text="Address:">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+            <Label fx:id="addressLabel" styleClass="attribute-value" />
+        </HBox>
+
+        <HBox spacing="10">
+            <Label prefHeight="27.0" prefWidth="89.0" styleClass="attribute-label" text="Description:">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+            <Label fx:id="descriptionLabel" styleClass="attribute-value" />
+        </HBox>
+
+        <HBox spacing="10">
+            <Label fx:id="pictureLabel" styleClass="attribute-value" />
+         <Label fx:id="ticket_price1" prefHeight="18.0" prefWidth="111.0" text="prix">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+        </HBox>
+
+        <HBox spacing="10">
+            <Label styleClass="attribute-label" text="Start Date:">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+            <Label fx:id="startDateLabel" styleClass="attribute-value" />
+        </HBox>
+
+        <HBox spacing="10">
+            <Label styleClass="attribute-label" text="End Date:">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+            <Label fx:id="endDateLabel" styleClass="attribute-value" />
+        </HBox>
+
+        <HBox spacing="10">
+            <Label prefHeight="20.0" prefWidth="118.0" styleClass="attribute-label" text="Number of Tickets:">
+            <font>
+               <Font size="14.0" />
+            </font></Label>
+            <Label fx:id="nbTicketLabel" styleClass="attribute-value" />
+        </HBox>
+
+    </VBox>
+
+    <ImageView fx:id="ticket_photo" fitHeight="375.0" fitWidth="241.0" layoutX="331.0" layoutY="25.0" pickOnBounds="true" preserveRatio="true" styleClass="image-view">
+        <image>
+            <Image url="@../image/images/9780226439785.jpg" />
+        </image>
+    </ImageView>
+   <Button fx:id="addTicket" layoutX="44.0" layoutY="376.0" mnemonicParsing="false" onAction="#addTicket" prefHeight="38.0" prefWidth="187.0" stylesheets="@Design.css" text="acheter une ticket">
+      <styleClass>
+         <String fx:value="shadow" />
+         <String fx:value="btn_buy" />
+      </styleClass></Button>
+      <Label fx:id="titleLabel" styleClass="attribute-value" />
+   <Label fx:id="ticket_title" layoutX="145.0" layoutY="116.0" prefHeight="18.0" prefWidth="111.0" text="Label" />
+   <Label fx:id="ticket_adresse" layoutX="145.0" layoutY="150.0" prefHeight="18.0" prefWidth="111.0" text="Label" />
+   <Label fx:id="ticket_end" layoutX="145.0" layoutY="278.0" prefHeight="18.0" prefWidth="111.0" text="Label" />
+   <Label fx:id="ticket_start" layoutX="145.0" layoutY="245.0" prefHeight="18.0" prefWidth="111.0" text="Label" />
+   <Label fx:id="ticket_price" layoutX="145.0" layoutY="215.0" prefHeight="18.0" prefWidth="111.0" text="Label" />
+   <Label fx:id="ticket_description" layoutX="145.0" layoutY="176.0" prefHeight="38.0" prefWidth="175.0" text="Label" />
+   <Label fx:id="nb_ticket" layoutX="181.0" layoutY="308.0" prefHeight="18.0" prefWidth="111.0" text="Label" />
+     <Label layoutX="27.0" layoutY="36.0" prefHeight="38.0" prefWidth="266.0" styleClass="event-details-label" text="Détails de l'événement">
+      <font>
+         <Font name="Berlin Sans FB" size="24.0" />
+      </font>
+   </Label>
+
+</AnchorPane>
Index: src/main/java/com/example/livrebook/model/event/Event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.livrebook.model.event;\n\nimport java.util.Date;\nimport java.util.List;\n\npublic class Event {\n    private int id ;\n    private String title;\n    private String adresse;\n    private String description;\n    private String picture;\n    private Date startDate;\n    private Date endDate;\n    private List<Integer> idTickets;\n\n    public Event(int id, String title, String adresse, String description, String picture, Date startDate, Date endDate, List<Integer> idTickets) {\n        this.id = id;\n        this.title = title;\n        this.adresse = adresse;\n        this.description = description;\n        this.picture = picture;\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.idTickets = idTickets;\n    }\n\n    public Event() {\n    }\n\n    public Event(String title, String adresse, String description, String picture, Date startDate, Date endDate, List<Integer> idTickets) {\n        this.title = title;\n        this.adresse = adresse;\n        this.description = description;\n        this.picture = picture;\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.idTickets = idTickets;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getAdresse() {\n        return adresse;\n    }\n\n    public void setAdresse(String adresse) {\n        this.adresse = adresse;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public String getPicture() {\n        return picture;\n    }\n\n    public void setPicture(String picture) {\n        this.picture = picture;\n    }\n\n    public Date getStartDate() {\n        return startDate;\n    }\n\n    public void setStartDate(Date startDate) {\n        this.startDate = startDate;\n    }\n\n    public Date getEndDate() {\n        return endDate;\n    }\n\n    public void setEndDate(Date endDate) {\n        this.endDate = endDate;\n    }\n\n    public List<Integer> getIdTickets() {\n        return idTickets;\n    }\n\n    public void setIdTickets(List<Integer> idTickets) {\n        this.idTickets = idTickets;\n    }\n\n    @Override\n    public String toString() {\n        return \"Event{\" +\n                \"id=\" + id +\n                \", title='\" + title + '\\'' +\n                \", adresse='\" + adresse + '\\'' +\n                \", description='\" + description + '\\'' +\n                \", picture='\" + picture + '\\'' +\n                \", startDate=\" + startDate +\n                \", endDate=\" + endDate +\n                \", idTickets=\" + idTickets +\n                '}';\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/livrebook/model/event/Event.java b/src/main/java/com/example/livrebook/model/event/Event.java
--- a/src/main/java/com/example/livrebook/model/event/Event.java	
+++ b/src/main/java/com/example/livrebook/model/event/Event.java	
@@ -11,30 +11,32 @@
     private String picture;
     private Date startDate;
     private Date endDate;
-    private List<Integer> idTickets;
+    private List<Ticket> Tickets;
+    private int nb_ticket;
 
-    public Event(int id, String title, String adresse, String description, String picture, Date startDate, Date endDate, List<Integer> idTickets) {
-        this.id = id;
+
+    public Event(String title, String adresse, String description, String picture, Date startDate, Date endDate, int nb_ticket) {
         this.title = title;
         this.adresse = adresse;
         this.description = description;
         this.picture = picture;
         this.startDate = startDate;
         this.endDate = endDate;
-        this.idTickets = idTickets;
+       this.nb_ticket=nb_ticket;
     }
-
-    public Event() {
-    }
-
-    public Event(String title, String adresse, String description, String picture, Date startDate, Date endDate, List<Integer> idTickets) {
+    public Event(int id ,String title, String adresse, String description, String picture, Date startDate, Date endDate) {
+        this.id=id;
         this.title = title;
         this.adresse = adresse;
         this.description = description;
         this.picture = picture;
         this.startDate = startDate;
         this.endDate = endDate;
-        this.idTickets = idTickets;
+
+    }
+
+    public Event() {
+
     }
 
     public int getId() {
@@ -93,12 +95,20 @@
         this.endDate = endDate;
     }
 
-    public List<Integer> getIdTickets() {
-        return idTickets;
+    public List<Ticket> getIdTickets() {
+        return Tickets;
+    }
+
+    public void setTickets(List<Ticket> Tickets) {
+        this.Tickets = Tickets;
+    }
+
+    public int getNb_ticket() {
+        return nb_ticket;
     }
 
-    public void setIdTickets(List<Integer> idTickets) {
-        this.idTickets = idTickets;
+    public void setNb_ticket(int nb_ticket) {
+        this.nb_ticket = nb_ticket;
     }
 
     @Override
@@ -111,7 +121,9 @@
                 ", picture='" + picture + '\'' +
                 ", startDate=" + startDate +
                 ", endDate=" + endDate +
-                ", idTickets=" + idTickets +
+                ", nombre de Tickets=" + nb_ticket +
                 '}';
     }
+
+
 }
Index: src/main/java/com/example/livrebook/gui/event/CardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/livrebook/gui/event/CardController.java b/src/main/java/com/example/livrebook/gui/event/CardController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/livrebook/gui/event/CardController.java	
@@ -0,0 +1,39 @@
+package com.example.livrebook.gui.event;
+
+import com.example.livrebook.model.event.Event;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.control.Label;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+import javafx.scene.layout.HBox;
+
+public class CardController {
+    @FXML
+    private HBox box;
+
+    @FXML
+    private Label dateEvent;
+
+    @FXML
+    private Label eventName;
+
+    @FXML
+    private ImageView eventImage;
+    @FXML
+    private Label adressEvent;
+    private String [] colors ={};
+
+
+
+    public void setData(Event event ){
+        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/com/example/livrebook/Event/Client_event.fxml"));
+        if (event.getPicture() != null) {
+        Image image = new Image((getClass().getResourceAsStream(event.getPicture())));
+        eventImage.setImage(image);}
+        eventName.setText(event.getTitle());
+        String date= String.valueOf(event.getStartDate());
+        dateEvent.setText(date);
+        adressEvent.setText(event.getAdresse());
+    }
+}
